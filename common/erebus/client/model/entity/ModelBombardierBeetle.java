package erebus.client.model.entity;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;


public class ModelBombardierBeetle extends ModelBase
{
  //fields
    ModelRenderer Thx;
    ModelRenderer ThxS;
    ModelRenderer Ab;
    ModelRenderer AbSide;
    ModelRenderer AbBack;
    ModelRenderer Head1;
    ModelRenderer Head2;
    ModelRenderer LMandible;
    ModelRenderer RMandible;
    ModelRenderer Eyes;
    ModelRenderer LBLA;
    ModelRenderer LBLB;
    ModelRenderer LBLC;
    ModelRenderer LBLD;
    ModelRenderer LMLA;
    ModelRenderer LMLB;
    ModelRenderer LMLC;
    ModelRenderer LMLD;
    ModelRenderer LFLA;
    ModelRenderer LFLB;
    ModelRenderer LFLC;
    ModelRenderer LFLD;
    ModelRenderer RFLA;
    ModelRenderer RFLB;
    ModelRenderer RFLC;
    ModelRenderer RFLD;
    ModelRenderer RMLA;
    ModelRenderer RMLB;
    ModelRenderer RMLC;
    ModelRenderer RMLD;
    ModelRenderer RBLA;
    ModelRenderer RBLB;
    ModelRenderer RBLC;
    ModelRenderer RBLD;
    ModelRenderer AntRE;
    ModelRenderer AntLE;
  
  public ModelBombardierBeetle()
  {
    textureWidth = 64;
    textureHeight = 128;
    
      Thx = new ModelRenderer(this, 14, 13);
      Thx.addBox(-3.5F, -3F, -1F, 7, 6, 7);
      Thx.setRotationPoint(0F, 17F, 0F);
      Thx.setTextureSize(64, 128);
      Thx.mirror = true;
      setRotation(Thx, 0F, 0F, 0F);
      ThxS = new ModelRenderer(this, 15, 27);
      ThxS.addBox(-5F, -2F, 0F, 10, 4, 4);
      ThxS.setRotationPoint(0F, 17F, 0F);
      ThxS.setTextureSize(64, 128);
      ThxS.mirror = true;
      setRotation(ThxS, 0F, 0F, 0F);
      Ab = new ModelRenderer(this, 0, 90);
      Ab.addBox(-4.5F, -4.5F, -2F, 9, 7, 21);
      Ab.setRotationPoint(0F, 18F, 7F);
      Ab.setTextureSize(64, 128);
      Ab.mirror = true;
      setRotation(Ab, -0.0872665F, 0F, 0F);
      AbSide = new ModelRenderer(this, 0, 40);
      AbSide.addBox(-6F, -2F, 1F, 12, 4, 19);
      AbSide.setRotationPoint(0F, 17F, 5F);
      AbSide.setTextureSize(64, 128);
      AbSide.mirror = true;
      setRotation(AbSide, -0.0872665F, 0F, 0F);
      AbBack = new ModelRenderer(this, 22, 120);
      AbBack.addBox(-3F, -2F, 21F, 6, 4, 2);
      AbBack.setRotationPoint(0F, 17F, 5F);
      AbBack.setTextureSize(64, 128);
      AbBack.mirror = true;
      setRotation(AbBack, -0.0872665F, 0F, 0F);
      Head1 = new ModelRenderer(this, 16, 0);
      Head1.addBox(-2.5F, -1.5F, -6F, 5, 4, 6);
      Head1.setRotationPoint(0F, 17F, -1F);
      Head1.setTextureSize(64, 128);
      Head1.mirror = true;
      setRotation(Head1, 0.1745329F, 0F, 0F);
      Head2 = new ModelRenderer(this, 39, 0);
      Head2.addBox(-2F, -1F, -7.5F, 4, 3, 2);
      Head2.setRotationPoint(0F, 17F, -1F);
      Head2.setTextureSize(64, 128);
      Head2.mirror = true;
      setRotation(Head2, 0.1745329F, 0F, 0F);
      LMandible = new ModelRenderer(this, 52, 0);
      LMandible.addBox(0.5F, 1F, -10.5F, 1, 1, 3);
      LMandible.setRotationPoint(0F, 17F, -1F);
      LMandible.setTextureSize(64, 128);
      LMandible.mirror = true;
      setRotation(LMandible, 0.1745329F, 0F, 0F);
      RMandible = new ModelRenderer(this, 52, 0);
      RMandible.addBox(-1.5F, 1F, -10.5F, 1, 1, 3);
      RMandible.setRotationPoint(0F, 17F, -1F);
      RMandible.setTextureSize(64, 128);
      RMandible.mirror = true;
      setRotation(RMandible, 0.1745329F, 0F, 0F);
      Eyes = new ModelRenderer(this, 0, 0);
      Eyes.addBox(-3.5F, -1F, -4F, 7, 2, 2);
      Eyes.setRotationPoint(0F, 17F, -1F);
      Eyes.setTextureSize(64, 128);
      Eyes.mirror = true;
      setRotation(Eyes, 0.1745329F, 0F, 0F);
      LBLA = new ModelRenderer(this, 42, 95);
      LBLA.addBox(-1F, -1F, -1F, 7, 2, 2);
      LBLA.setRotationPoint(6F, 18F, 14F);
      LBLA.setTextureSize(64, 128);
      LBLA.mirror = true;
      setRotation(LBLA, 0.25F, -0.7F, -0.5F);
      LBLB = new ModelRenderer(this, 0, 88);
      LBLB.addBox(5F, 0F, -1F, 2, 4, 2);
      LBLB.setRotationPoint(6F, 18F, 14F);
      LBLB.setTextureSize(64, 128);
      LBLB.mirror = true;
      setRotation(LBLB, 0.25F, -0.7F, -0.5F);
      LBLC = new ModelRenderer(this, 0, 82);
      LBLC.addBox(3.5F, 5.5F, -0.5F, 2, 4, 1);
      LBLC.setRotationPoint(6F, 18F, 14F);
      LBLC.setTextureSize(64, 128);
      LBLC.mirror = true;
      setRotation(LBLC, 0.5F, -0.6F, -0.95F);
      LBLD = new ModelRenderer(this, 0, 76);
      LBLD.addBox(2.5F, 9F, -0.5F, 1, 4, 1);
      LBLD.setRotationPoint(6F, 18F, 14F);
      LBLD.setTextureSize(64, 128);
      LBLD.mirror = true;
      setRotation(LBLD, 0.64F, -0.7F, -1.27F);
      LMLA = new ModelRenderer(this, 0, 95);
      LMLA.addBox(0F, -1F, -1F, 4, 2, 2);
      LMLA.setRotationPoint(5F, 18F, 8F);
      LMLA.setTextureSize(64, 128);
      LMLA.mirror = true;
      setRotation(LMLA, 0F, 0F, -0.3490659F);
      LMLB = new ModelRenderer(this, 0, 88);
      LMLB.addBox(3F, 0F, -1F, 2, 4, 2);
      LMLB.setRotationPoint(5F, 18F, 8F);
      LMLB.setTextureSize(64, 128);
      LMLB.mirror = true;
      setRotation(LMLB, 0F, 0F, -0.3490659F);
      LMLC = new ModelRenderer(this, 0, 82);
      LMLC.addBox(1.5F, 4.5F, -0.5F, 2, 4, 1);
      LMLC.setRotationPoint(5F, 18F, 8F);
      LMLC.setTextureSize(64, 128);
      LMLC.mirror = true;
      setRotation(LMLC, 0F, 0F, -0.6981317F);
      LMLD = new ModelRenderer(this, 0, 76);
      LMLD.addBox(0.5F, 8F, -0.5F, 1, 4, 1);
      LMLD.setRotationPoint(5F, 18F, 8F);
      LMLD.setTextureSize(64, 128);
      LMLD.mirror = true;
      setRotation(LMLD, 0F, 0F, -0.8726646F);
      LFLA = new ModelRenderer(this, 0, 95);
      LFLA.addBox(0F, -1F, -1F, 4, 2, 2);
      LFLA.setRotationPoint(4F, 18F, 2F);
      LFLA.setTextureSize(64, 128);
      LFLA.mirror = true;
      setRotation(LFLA, -0.25F, 0.7F, -0.5F);
      LFLB = new ModelRenderer(this, 0, 88);
      LFLB.addBox(3F, 0F, -1F, 2, 4, 2);
      LFLB.setRotationPoint(4F, 18F, 2F);
      LFLB.setTextureSize(64, 128);
      LFLB.mirror = true;
      setRotation(LFLB, -0.25F, 0.7F, -0.5F);
      LFLC = new ModelRenderer(this, 0, 82);
      LFLC.addBox(1.5F, 4.5F, -0.5F, 2, 4, 1);
      LFLC.setRotationPoint(4F, 18F, 2F);
      LFLC.setTextureSize(64, 128);
      LFLC.mirror = true;
      setRotation(LFLC, -0.5F, 0.6F, -0.95F);
      LFLD = new ModelRenderer(this, 0, 76);
      LFLD.addBox(0.5F, 8F, -0.5F, 1, 4, 1);
      LFLD.setRotationPoint(4F, 18F, 2F);
      LFLD.setTextureSize(64, 128);
      LFLD.mirror = true;
      setRotation(LFLD, -0.64F, 0.7F, -1.27F);
      RFLA = new ModelRenderer(this, 0, 95);
      RFLA.addBox(-4F, -1F, -1F, 4, 2, 2);
      RFLA.setRotationPoint(-4F, 18F, 2F);
      RFLA.setTextureSize(64, 128);
      RFLA.mirror = true;
      setRotation(RFLA, -0.25F, -0.7F, 0.5F);
      RFLB = new ModelRenderer(this, 0, 88);
      RFLB.addBox(-5F, 0F, -1F, 2, 4, 2);
      RFLB.setRotationPoint(-4F, 18F, 2F);
      RFLB.setTextureSize(64, 128);
      RFLB.mirror = true;
      setRotation(RFLB, -0.25F, -0.7F, 0.5F);
      RFLC = new ModelRenderer(this, 0, 82);
      RFLC.addBox(-3.5F, 4.5F, -0.5F, 2, 4, 1);
      RFLC.setRotationPoint(-4F, 18F, 2F);
      RFLC.setTextureSize(64, 128);
      RFLC.mirror = true;
      setRotation(RFLC, -0.5F, -0.6F, 0.95F);
      RFLD = new ModelRenderer(this, 0, 76);
      RFLD.addBox(-1.5F, 8F, -0.5F, 1, 4, 1);
      RFLD.setRotationPoint(-4F, 18F, 2F);
      RFLD.setTextureSize(64, 128);
      RFLD.mirror = true;
      setRotation(RFLD, -0.64F, -0.7F, 1.27F);
      RMLA = new ModelRenderer(this, 0, 95);
      RMLA.addBox(-4F, -1F, -1F, 4, 2, 2);
      RMLA.setRotationPoint(-5F, 18F, 8F);
      RMLA.setTextureSize(64, 128);
      RMLA.mirror = true;
      setRotation(RMLA, 0F, 0F, 0.3490659F);
      RMLB = new ModelRenderer(this, 0, 88);
      RMLB.addBox(-5F, 0F, -1F, 2, 4, 2);
      RMLB.setRotationPoint(-5F, 18F, 8F);
      RMLB.setTextureSize(64, 128);
      RMLB.mirror = true;
      setRotation(RMLB, 0F, 0F, 0.3490659F);
      RMLC = new ModelRenderer(this, 0, 82);
      RMLC.addBox(-3.5F, 4.5F, -0.5F, 2, 4, 1);
      RMLC.setRotationPoint(-5F, 18F, 8F);
      RMLC.setTextureSize(64, 128);
      RMLC.mirror = true;
      setRotation(RMLC, 0F, 0F, 0.6981317F);
      RMLD = new ModelRenderer(this, 0, 76);
      RMLD.addBox(-1.5F, 8F, -0.5F, 1, 4, 1);
      RMLD.setRotationPoint(-5F, 18F, 8F);
      RMLD.setTextureSize(64, 128);
      RMLD.mirror = true;
      setRotation(RMLD, 0F, 0F, 0.8726646F);
      RBLA = new ModelRenderer(this, 42, 95);
      RBLA.addBox(-6F, -1F, -1F, 7, 2, 2);
      RBLA.setRotationPoint(-6F, 18F, 14F);
      RBLA.setTextureSize(64, 128);
      RBLA.mirror = true;
      setRotation(RBLA, 0.25F, 0.7F, 0.5F);
      RBLB = new ModelRenderer(this, 0, 88);
      RBLB.addBox(-7F, 0F, -1F, 2, 4, 2);
      RBLB.setRotationPoint(-6F, 18F, 14F);
      RBLB.setTextureSize(64, 128);
      RBLB.mirror = true;
      setRotation(RBLB, 0.25F, 0.7F, 0.5F);
      RBLC = new ModelRenderer(this, 0, 82);
      RBLC.addBox(-5.5F, 5.5F, -0.5F, 2, 4, 1);
      RBLC.setRotationPoint(-6F, 18F, 14F);
      RBLC.setTextureSize(64, 128);
      RBLC.mirror = true;
      setRotation(RBLC, 0.5F, 0.6F, 0.95F);
      RBLD = new ModelRenderer(this, 0, 76);
      RBLD.addBox(-3.5F, 9F, -0.5F, 1, 4, 1);
      RBLD.setRotationPoint(-6F, 18F, 14F);
      RBLD.setTextureSize(64, 128);
      RBLD.mirror = true;
      setRotation(RBLD, 0.64F, 0.7F, 1.27F);
      AntRE = new ModelRenderer(this, 40, 15);
      AntRE.addBox(-13F, 0.5F, -2F, 9, 1, 1);
      AntRE.setRotationPoint(0F, 17F, -1F);
      AntRE.setTextureSize(64, 128);
      AntRE.mirror = true;
      setRotation(AntRE, 0F, -0.8726646F, 0F);
      AntLE = new ModelRenderer(this, 40, 15);
      AntLE.addBox(5F, 0.5F, -2F, 9, 1, 1);
      AntLE.setRotationPoint(0F, 17F, -1F);
      AntLE.setTextureSize(64, 128);
      AntLE.mirror = true;
      setRotation(AntLE, 0F, 0.8726646F, 0F);
  }
  
  public void render(Entity par1Entity, float par2, float par3, float par4, float par5, float par6, float par7)
  {
	super.render(par1Entity, par2, par3, par4, par5, par6, par7);
	setRotationAngles(par2, par3, par4, par5, par6, par7, par1Entity);
	Thx.render(par7);
    ThxS.render(par7);
    Ab.render(par7);
    AbSide.render(par7);
    AbBack.render(par7);
    Head1.render(par7);
    Head2.render(par7);
    LMandible.render(par7);
    RMandible.render(par7);
    Eyes.render(par7);
    LBLA.render(par7);
    LBLB.render(par7);
    LBLC.render(par7);
    LBLD.render(par7);
    LMLA.render(par7);
    LMLB.render(par7);
    LMLC.render(par7);
    LMLD.render(par7);
    LFLA.render(par7);
    LFLB.render(par7);
    LFLC.render(par7);
    LFLD.render(par7);
    RFLA.render(par7);
    RFLB.render(par7);
    RFLC.render(par7);
    RFLD.render(par7);
    RMLA.render(par7);
    RMLB.render(par7);
    RMLC.render(par7);
    RMLD.render(par7);
    RBLA.render(par7);
    RBLB.render(par7);
    RBLC.render(par7);
    RBLD.render(par7);
    AntRE.render(par7);
    AntLE.render(par7);

  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity par7Entity)
  {
      this.Head1.rotateAngleY = par4 / (180F / (float)Math.PI);
      this.Head2.rotateAngleY = par4 / (180F / (float)Math.PI);
      this.LMandible.rotateAngleY = par4 / (180F / (float)Math.PI);
      this.RMandible.rotateAngleY = par4 / (180F / (float)Math.PI);
      this.AntRE.rotateAngleY = par4 / (180F / (float)Math.PI)-1.0F;
      this.AntLE.rotateAngleY = par4 / (180F / (float)Math.PI)+1.0F;
      this.Eyes.rotateAngleY = par4 / (180F  / (float)Math.PI);

      this.LBLA.rotateAngleX = MathHelper.cos(par1 * 2.0F + (float)Math.PI) * 0.7F * par2 +0.25F;
      this.LBLB.rotateAngleX = MathHelper.cos(par1  * 2.0F + (float)Math.PI) * 0.7F * par2 +0.25F;
      this.LBLC.rotateAngleX = MathHelper.cos(par1  * 2.0F + (float)Math.PI) * 0.7F * par2 +0.5F;
      this.LBLD.rotateAngleX = MathHelper.cos(par1  * 2.0F + (float)Math.PI) * 0.7F * par2 +0.61F;
      this.LMLA.rotateAngleX = MathHelper.cos(par1  * 2.0F) * 0.7F * par2;
      this.LMLB.rotateAngleX = MathHelper.cos(par1  * 2.0F) * 0.7F * par2;
      this.LMLC.rotateAngleX = MathHelper.cos(par1  * 2.0F) * 0.7F * par2;
      this.LMLD.rotateAngleX = MathHelper.cos(par1  * 2.0F) * 0.7F * par2;
      this.LFLA.rotateAngleX = MathHelper.cos(par1  * 2.0F + (float)Math.PI) * 0.7F * par2 -0.25F;
      this.LFLB.rotateAngleX = MathHelper.cos(par1  * 2.0F + (float)Math.PI) * 0.7F * par2 -0.25F;
      this.LFLC.rotateAngleX = MathHelper.cos(par1  * 2.0F + (float)Math.PI) * 0.7F * par2 -0.5F;
      this.LFLD.rotateAngleX = MathHelper.cos(par1  * 2.0F + (float)Math.PI) * 0.7F * par2 -0.64F;
      this.RBLA.rotateAngleX = MathHelper.cos(par1  * 2.0F) * 0.7F * par2 +0.25F;
      this.RBLB.rotateAngleX = MathHelper.cos(par1  * 2.0F) * 0.7F * par2 +0.25F;
      this.RBLC.rotateAngleX = MathHelper.cos(par1  * 2.0F) * 0.7F * par2 +0.5F;
      this.RBLD.rotateAngleX = MathHelper.cos(par1  * 2.0F) * 0.7F * par2 +0.61F;
      this.RMLA.rotateAngleX = MathHelper.cos(par1  * 2.0F + (float)Math.PI) * 0.7F * par2;
      this.RMLB.rotateAngleX = MathHelper.cos(par1  * 2.0F + (float)Math.PI) * 0.7F * par2;
      this.RMLC.rotateAngleX = MathHelper.cos(par1  * 2.0F + (float)Math.PI) * 0.7F * par2;
      this.RMLD.rotateAngleX = MathHelper.cos(par1  * 2.0F + (float)Math.PI) * 0.7F * par2;
      this.RFLA.rotateAngleX = MathHelper.cos(par1  * 2.0F) * 0.7F * par2 -0.25F;
      this.RFLB.rotateAngleX = MathHelper.cos(par1  * 2.0F) * 0.7F * par2 -0.25F;
      this.RFLC.rotateAngleX = MathHelper.cos(par1  * 2.0F) * 0.7F * par2 -0.5F;
      this.RFLD.rotateAngleX = MathHelper.cos(par1  * 2.0F) * 0.7F * par2 -0.64F;
  }
}
